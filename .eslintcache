[{"/Users/alex/dev/react/react_webtag/src/index.tsx":"1","/Users/alex/dev/react/react_webtag/src/reportWebVitals.ts":"2","/Users/alex/dev/react/react_webtag/src/App.tsx":"3","/Users/alex/dev/react/react_webtag/src/page/SearchPage.tsx":"4","/Users/alex/dev/react/react_webtag/src/component/SearchResults.tsx":"5","/Users/alex/dev/react/react_webtag/src/component/ResultItem.tsx":"6","/Users/alex/dev/react/react_webtag/src/util/Util.ts":"7","/Users/alex/dev/react/react_webtag/src/component/LoginStateButton.tsx":"8","/Users/alex/dev/react/react_webtag/src/context/MainContext.tsx":"9","/Users/alex/dev/react/react_webtag/src/component/TagSearchBar.tsx":"10","/Users/alex/dev/react/react_webtag/src/component/VoteChip.tsx":"11","/Users/alex/dev/react/homebrew/src/index.tsx":"12","/Users/alex/dev/react/homebrew/src/reportWebVitals.ts":"13","/Users/alex/dev/react/homebrew/src/App.tsx":"14","/Users/alex/dev/react/homebrew/src/page/BeerListPage.tsx":"15","/Users/alex/dev/react/homebrew/src/page/BeerDetailPage.tsx":"16","/Users/alex/dev/react/homebrew/src/model/Common.ts":"17","/Users/alex/dev/react/homebrew/src/component/NavBar.tsx":"18","/Users/alex/dev/html/homebrew/src/index.tsx":"19","/Users/alex/dev/html/homebrew/src/reportWebVitals.ts":"20","/Users/alex/dev/html/homebrew/src/App.tsx":"21","/Users/alex/dev/html/homebrew/src/page/BeerDetailPage.tsx":"22","/Users/alex/dev/html/homebrew/src/page/BeerListPage.tsx":"23","/Users/alex/dev/html/homebrew/src/component/NavBar.tsx":"24","/Users/alex/dev/html/homebrew/src/model/Common.ts":"25"},{"size":500,"mtime":1609715969929,"results":"26","hashOfConfig":"27"},{"size":425,"mtime":1609715969930,"results":"28","hashOfConfig":"27"},{"size":374,"mtime":1610063446388,"results":"29","hashOfConfig":"27"},{"size":1499,"mtime":1610080408603,"results":"30","hashOfConfig":"27"},{"size":6745,"mtime":1610403030417,"results":"31","hashOfConfig":"27"},{"size":3127,"mtime":1610244346190,"results":"32","hashOfConfig":"27"},{"size":451,"mtime":1609987823285,"results":"33","hashOfConfig":"27"},{"size":3128,"mtime":1610149062227,"results":"34","hashOfConfig":"27"},{"size":1332,"mtime":1610064228769,"results":"35","hashOfConfig":"27"},{"size":2543,"mtime":1610149667402,"results":"36","hashOfConfig":"27"},{"size":1766,"mtime":1610142009286,"results":"37","hashOfConfig":"27"},{"size":500,"mtime":1613171687021,"results":"38","hashOfConfig":"39"},{"size":425,"mtime":1609715969930,"results":"40","hashOfConfig":"39"},{"size":599,"mtime":1617876862870,"results":"41","hashOfConfig":"39"},{"size":2350,"mtime":1617878679327,"results":"42","hashOfConfig":"39"},{"size":4205,"mtime":1617877413914,"results":"43","hashOfConfig":"39"},{"size":660,"mtime":1617263073430,"results":"44","hashOfConfig":"39"},{"size":279,"mtime":1617876483859,"results":"45","hashOfConfig":"39"},{"size":500,"mtime":1613171687021,"results":"46","hashOfConfig":"47"},{"size":425,"mtime":1609715969930,"results":"48","hashOfConfig":"47"},{"size":599,"mtime":1617876862870,"results":"49","hashOfConfig":"47"},{"size":4205,"mtime":1617877413914,"results":"50","hashOfConfig":"47"},{"size":2350,"mtime":1617878679327,"results":"51","hashOfConfig":"47"},{"size":279,"mtime":1617876483859,"results":"52","hashOfConfig":"47"},{"size":660,"mtime":1617263073430,"results":"53","hashOfConfig":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"8zai9x",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"1kkrha8",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"82"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kyfye7",{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alex/dev/react/react_webtag/src/index.tsx",[],["114","115"],"/Users/alex/dev/react/react_webtag/src/reportWebVitals.ts",[],"/Users/alex/dev/react/react_webtag/src/App.tsx",[],"/Users/alex/dev/react/react_webtag/src/page/SearchPage.tsx",[],"/Users/alex/dev/react/react_webtag/src/component/SearchResults.tsx",["116","117"],"\n\nimport { Popover } from '@material-ui/core';\nimport styled from 'styled-components';\nimport React from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport ResultItem from \"./ResultItem\"\nimport {eqArr} from \"../util/Util\"\nimport {WebTagClient, ContentSearchModel, TagCount, ContentSearchResult, ContentSearchItem} from \"webtag_client\"\nimport {MainContext}  from \"../context/MainContext\";\nimport TagSearchBar from \"./TagSearchBar\"\n\ninterface StateType {\n    results: ContentSearchResult\n    addStatus?: {item: ContentSearchItem, element: Element} \n    lastQuery: TagCount[]\n}\n\nexport default class SearchResults extends React.Component<{tags: TagCount[], chipPressed:(tag: TagCount) => void}, StateType> {\n    \n    static contextType = MainContext;\n\n    static emptyResults(): ContentSearchResult {\n        return {results: [], totalHits: 0, page: 1};\n    }\n\n    constructor(props: {tags: TagCount[], chipPressed:(tag: TagCount) => void}) {\n        super(props)\n        this.state = {results: SearchResults.emptyResults(), lastQuery: []}\n    }\n\n    render() {\n        let list = this.state.results.results.map(x => {\n            return <ResultItem key={x.id} item={x} chipPressed={this.chipPressed} addPressed={this.addPressed} changePressed={this.changePressed} />\n        })\n\n        return  <div>\n            <p>Results: {this.state.results.totalHits}</p>\n            <InfiniteScroll\n            dataLength={this.state.results.results.length   }\n            next={this.searchNext}\n            hasMore={this.hasMore()}\n            loader={<h4>Loading...</h4>}\n            endMessage={<h3>No more results :(</h3>}\n\n            >\n            {list}\n\n            </InfiniteScroll>\n\n            <AddPopover\n                open={!!this.state.addStatus}\n                onClose={this.addClosed}\n                anchorEl={this.state.addStatus?.element}\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n            >\n                <PopoverContainer>\n                    <TagSearchBar selectedTags={[]} selectionChanged={this.addTagSelected} newTagCrated={this.newTagAdded} />\n                </PopoverContainer>\n                \n            </AddPopover>\n        </div>\n        \n        \n    }\n\n    componentDidUpdate(prevProps: {tags: TagCount[]}) {\n        if (this.isSameSearch(this.props.tags, prevProps.tags)) {\n            return; //Don't redo the search\n        }\n\n        this.searchContent(this.props.tags, 1);\n        \n    }\n\n    //Data\n\n    hasMore = () => {\n        if (this.state.results.totalHits === 0) {\n            return false;\n        }\n        return this.state.results.results.length < this.state.results.totalHits;\n    }\n\n    isSameSearch = (oldSearch: TagCount[], nextSearch: TagCount[]):boolean => {\n        let oldIds = oldSearch.map(x => x.id)\n        let newIds = nextSearch.map(x => x.id);\n        return eqArr(oldIds, newIds);\n    }\n\n    //Events\n\n    addTagSelected = async (element: TagSearchBar, tags: TagCount[]) => {\n        let item = this.state.addStatus?.item\n        if (!item) {\n            return;\n        }\n        this.addTag(item, tags[0].name, 1)\n    }\n\n    newTagAdded = async (element: TagSearchBar, tag: string) => {\n        let item = this.state.addStatus?.item\n        if (!item) {\n            return;\n        }\n        this.addTag(item, tag, 1)\n    }\n\n    addClosed = () => {\n        this.setState({...this.state, addStatus: undefined})\n    }\n\n    addPressed = (item: ContentSearchItem, element: Element) => {\n        this.setState({...this.state, addStatus: {item, element}})\n    }\n\n    chipPressed = (tag: TagCount) => {\n        this.props.chipPressed(tag);\n    }\n\n    changePressed = (item: ContentSearchItem, tag: TagCount, value: number) => {\n        this.addTag(item, tag.name, value);\n    }\n\n    //MARK: API\n\n    addTag = async(item: ContentSearchItem, tagName: string, value: number) => {\n\n        let auth = this.context.state.authToken;\n        let result = (await new WebTagClient().addtag(item.url, tagName, value, auth))[0];\n\n        let resultItems = this.state.results.results;\n        for (let oldItem of resultItems) {\n            if (oldItem.id === item.id) {\n                let change = value - (oldItem.userTags[result.tag_id] ?? 0);\n                let found = false;\n                oldItem.userTags[result.tag_id] = value;\n                for (let tag of oldItem.tags) {\n                    if (tag.id == result.tag_id) {\n                        found = true;\n                        tag.count = tag.count + change;\n                        break;\n                    }\n                }\n                if (!found) {\n                    console.log(\"Not found \" + result.tag_id);\n                    console.log(oldItem.tags);\n                    let tagItem: TagCount = {id: result.tag_id, name: tagName, count: value}\n                    oldItem.tags.push(tagItem)\n                }\n\n                break;\n            }\n        }\n\n        let updatedResult: ContentSearchResult = {results: resultItems,\n            totalHits: this.state.results.totalHits,\n            page: this.state.results.page}\n\n        this.setState({...this.state, results: updatedResult})\n        this.addClosed()\n    }\n\n    searchContent = async (included: TagCount[], page: number) => {\n        if (included.length === 0) {\n            if (this.state.results)\n            this.setState({...this.state, results: SearchResults.emptyResults()})\n            return;\n        }\n        \n        let tagsIds = included.map(x => x.id)\n        let req: ContentSearchModel = {include: tagsIds, page: page}\n        let result = await new WebTagClient().searchContent(req, this.context.state.authToken);\n        console.log(\"Got page \" + result.page)\n        if  (page !== 1) {\n            //Append subsequent pages\n            let allResults: ContentSearchItem[] = [];\n            allResults = allResults.concat(this.state.results.results);\n            let existingIds:Set<string> = new Set(allResults.map(x => x.id));\n\n            for (let nextResult of result.results) {\n                if (existingIds.has(nextResult.id)) {\n                    console.log(\"Skipping duplicate\")\n                } else {\n                    allResults.push(nextResult);\n                }\n            }\n            result.results = allResults;\n        }\n        \n        this.setState({...this.state, results:result})\n    }\n\n    searchNext = async () => {\n        let page = this.state.results.page + 1;\n        this.searchContent(this.props.tags, page);\n    }\n\n}\n\nconst AddPopover = styled(Popover)`\n    min-width:200px;\n`;\n\nconst ResultList = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n\nconst PopoverContainer = styled.div`\n    min-width:200px;\n`;\n","/Users/alex/dev/react/react_webtag/src/component/ResultItem.tsx",[],"/Users/alex/dev/react/react_webtag/src/util/Util.ts",[],"/Users/alex/dev/react/react_webtag/src/component/LoginStateButton.tsx",[],"/Users/alex/dev/react/react_webtag/src/context/MainContext.tsx",[],"/Users/alex/dev/react/react_webtag/src/component/TagSearchBar.tsx",[],"/Users/alex/dev/react/react_webtag/src/component/VoteChip.tsx",["118"],"import styled from 'styled-components';\nimport React from 'react';\nimport { Box, Chip, Icon, Button } from '@material-ui/core';\nimport { TagCount } from 'webtag_client';\nimport { green, blue, grey } from '@material-ui/core/colors';\n\n\ninterface PropType {\n    tag: TagCount;\n    userValue: number;\n    onClick?: () => void;\n    changeVote?: (tag: TagCount, value: number) => void;\n}\n\nexport default class VoteChip extends React.Component<PropType> {\n\n    \n    render() {\n        let label = `${this.props.tag.name} ${this.props.tag.count}`;\n        let chip = <Chip size=\"small\" label={label} onClick={this.tagClicked} />\n        \n        return <Column>\n            <Button onClick={this.upPressed}>\n                <Icon style={{color: this.upColor()}}>arrow_circle_up</Icon>\n            </Button>\n            {chip}\n            <Button onClick={this.downPressed}>\n                <Icon style={{color: this.downColor()}}>arrow_circle_down</Icon>\n            </Button>\n            \n        </Column>\n    }\n\n    upColor = () => {\n        if (this.props.userValue > 0) {\n            return green[500];\n        }\n        return grey[500];\n    }\n\n    downColor = () => {\n        if (this.props.userValue < 0) {\n            return blue[500];\n        }\n        return grey[500];\n    }\n\n    tagClicked = () => {\n        if (this.props.onClick) {\n            this.props.onClick();\n        }\n    }\n\n    upPressed = () => {\n        let newValue = this.props.userValue > 0 ? 0 : 1;\n        this.props.changeVote?.(this.props.tag, newValue);\n    }\n\n    downPressed = () => {\n        let newValue = this.props.userValue < 0 ? 0 : -1;\n        this.props.changeVote?.(this.props.tag,  newValue);\n    }\n}\n\nconst Column = styled.div`\n    display: flex;\n    flex-direction: column;\n`;",["119","120"],"/Users/alex/dev/react/homebrew/src/index.tsx",[],["121","122"],"/Users/alex/dev/react/homebrew/src/reportWebVitals.ts",[],"/Users/alex/dev/react/homebrew/src/App.tsx",["123"],"import React from 'react';\nimport './App.css';\nimport BeerListPage from \"./page/BeerListPage\"\nimport BeerDetailPage from \"./page/BeerDetailPage\"\nimport NavBar from \"./component/NavBar\"\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <div>\n      <NavBar />\n      <Router>\n        <Switch>\n          <Route path=\"/:number\" exact={true} component={BeerDetailPage} />\n          <Route path=\"/\" exact={true} component={BeerListPage} />\n        </Switch>\n      \n      </Router>\n    </div>\n    \n    \n  );\n}\n\n\n\nexport default App;\n","/Users/alex/dev/react/homebrew/src/page/BeerListPage.tsx",["124"],"\nimport { Container, Paper} from '@material-ui/core';\nimport BeerSummary from \"../model/BeerSummary\";\nimport styled from 'styled-components';\nimport React from 'react';\nimport { BrewStatusUtil } from '../model/Common';\nimport {\n    Link\n  } from \"react-router-dom\";\n\nexport default class BeerListPage extends React.Component<{}, {beers: BeerSummary[]}> {\n\n    constructor(props: {}) {\n        super(props);\n        this.state = {beers: []}\n    }\n\n    dateLabel(item: BeerSummary): string | undefined {\n        var pieces: string[] = []\n        if (item.brewDate) {\n            pieces.push(`Brewed on ${item.brewDate}`)\n        }\n        if (item.bottleDate) {\n            pieces.push(`bottled on ${item.bottleDate}`)\n        }\n        if (pieces.length == 0) {\n            return undefined;\n        }\n        return pieces.join(\" and \")\n    }\n\n    statusColor(item: BeerSummary): string {\n        if (!item.status) {\n            return \"#7f8c8d\"\n        }\n        return BrewStatusUtil.color(item.status)\n    }\n\n    render() {\n        let items = this.state.beers.map(x => {\n            let dateItem = undefined\n            if (this.dateLabel(x)) {\n                dateItem = <p>{this.dateLabel(x)}</p>\n            }\n\n            return <BeerList key={x.number}>\n                \n                <Link to={`/${x.number}`}>\n                    <BeerContainer elevation={1}>\n                    <h2>Skorubrew #{x.number} {x.style} <StatusSpan style={{color:this.statusColor(x)}}>{x.status}</StatusSpan></h2>\n                    {dateItem}\n                    </BeerContainer>\n                \n                </Link>\n                \n            </BeerList>\n        })\n        return <Container>\n            \n            <ul>\n                {items}\n            </ul>\n        </Container>\n    }\n\n    getJSONData = async () => {\n        console.log(\"Fetching beer list\")\n        let filename = `/beerList.json`\n        let result = await fetch(filename);\n        let json = await result.json();\n        let obj: BeerSummary[] = json;\n        this.setState({...this.state, beers: obj})\n    }\n\n    componentDidMount() {\n        this.getJSONData();\n    }\n}\n\nconst BeerList = styled.li`\n    list-style-type: none;\n`;\n\nconst BeerContainer = styled(Paper)`\n    padding: 5px 20px;\n    margin: 10px 0px;\n`;\n\nconst StatusSpan = styled.span`\n    font-size:16px\n`;","/Users/alex/dev/react/homebrew/src/page/BeerDetailPage.tsx",["125"],"\nimport { Container, TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody} from '@material-ui/core';\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown'\nimport BeerDetail from '../model/BeerDetail'\nimport { BrewStatus, BrewStatusUtil } from '../model/Common';\n\ninterface DetailItem {\n    name: string\n    value: string\n}\n\nexport default class BeerDetailPage extends React.Component<any, {details?: BeerDetail, markdown?: string}> {\n\n    constructor(props: any) {\n        super(props)\n        this.state = {}\n    }\n\n    render() {\n        let details = this.state.details\n        if (!details) {\n            return this.loadingState()\n        }\n\n        let name = `Skorubrew #${details.number}`\n\n        let statusStyle = {color:this.statusColor(details.brewStatus), fontSize: \"150%\"}\n\n        return <Container>\n            <h1>{name} - <span>{details.style}</span> </h1>\n            <TableContainer component={Paper}>\n                <Table aria-label=\"simple table\">\n                    <TableBody>\n                        <TableRow>\n                            <TableCell>Status</TableCell>\n                            <TableCell style={statusStyle}>{details.brewStatus}</TableCell>\n                        </TableRow>\n                        {this.dataPairs().map(row => (\n                        <TableRow key={row.name}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.name}\n                            </TableCell>\n                            <TableCell >{row.value}</TableCell>\n                        </TableRow>\n                        )) }\n\n                    </TableBody>\n                </Table>\n                \n            </TableContainer>\n            \n            \n            {this.reactBody()}\n\n        </Container>\n    }\n\n    loadingState() {\n        return <p>Loading beer information</p>;\n    }\n\n    statusColor(status: BrewStatus) {\n        return BrewStatusUtil.color(status)\n    }\n\n    dataPairs(): DetailItem[] {\n        let details = this.state.details\n        if (!details) {\n            return []\n        }\n        let output: DetailItem[] = []\n        \n\n        this.optional(\"Brew Date\", output, details.brewDate)\n        this.optional(\"Bottle Date\", output, details.bottleDate);\n        this.optional(\"Dry Hop Date\", output, details.dryHopDate);\n        this.optional(\"Yeast\", output, details.yeast);\n\n        this.optional(\"Original Gravity\", output, details.originalGravity)\n        this.optional(\"Final Gravity\", output, details.finalGravity)\n\n        this.optional(\"Original Brix\", output, details.originalBrix)\n        this.optional(\"Final Brix\", output, details.finalBrix)\n\n        if (details.alcoholPct) {\n            output.push({name: \"ABV\", value: `${details.alcoholPct}%`});\n        }\n\n        this.optional(\"Caps\", output, details.caps)\n\n        return output;\n    }\n\n    optional(name: string, array: DetailItem[], optValue?: any) {\n        if (optValue) {\n            let item = {name, value: `${optValue}`}\n            array.push(item);\n        }\n    }\n\n    reactBody() {\n        if (!this.state.markdown) {\n            return <br />\n        }\n        return <ReactMarkdown>{this.state.markdown}</ReactMarkdown>\n    }\n\n    storeDetails = (details: BeerDetail) => {\n        this.setState({...this.state, details: details})\n    }\n\n    id = ():string => {\n        return this.props.match.params.number;\n    }\n\n    getJSONData = async () => {\n        console.log(this.props);\n\n        let filename = `${process.env.PUBLIC_URL}/beers/skorubrew${this.id()}.json`\n        console.log(filename);\n        let options = {headers: {'Accept': 'application/json'}}\n        let result = await fetch(filename, options);\n        let json = await result.json();\n        let obj: BeerDetail = json;\n        this.setState({...this.state, details: obj})\n    }\n\n    getMDData = async () => {\n        let filename = `/beers/skorubrew${this.id()}.md`\n        let result = await fetch(filename);\n        let text = await result.text()\n        this.setState({...this.state, markdown: text})\n    }\n\n    componentDidMount() {\n        this.getJSONData();\n        this.getMDData();\n    }\n\n\n}","/Users/alex/dev/react/homebrew/src/model/Common.ts",[],["126","127"],"/Users/alex/dev/react/homebrew/src/component/NavBar.tsx",["128","129"],"\nimport React from 'react';\n\ninterface DetailItem {\n    name: string\n    value: string\n}\n\nexport default class NavBar extends React.Component<{}, {}> {\n\n    render() {\n        return <a href=\"/\">\n                <img src=\"assets/logo.png\" width=\"434\" />\n            </a>\n    }\n\n}","/Users/alex/dev/html/homebrew/src/index.tsx",[],"/Users/alex/dev/html/homebrew/src/reportWebVitals.ts",[],"/Users/alex/dev/html/homebrew/src/App.tsx",["130"],"/Users/alex/dev/html/homebrew/src/page/BeerDetailPage.tsx",["131"],"/Users/alex/dev/html/homebrew/src/page/BeerListPage.tsx",["132"],"/Users/alex/dev/html/homebrew/src/component/NavBar.tsx",["133","134"],"/Users/alex/dev/html/homebrew/src/model/Common.ts",[],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":139,"column":32,"nodeType":"141","messageId":"142","endLine":139,"endColumn":34},{"ruleId":"143","severity":1,"message":"144","line":205,"column":7,"nodeType":"145","messageId":"146","endLine":205,"endColumn":17},{"ruleId":"143","severity":1,"message":"147","line":3,"column":10,"nodeType":"145","messageId":"146","endLine":3,"endColumn":13},{"ruleId":"135","replacedBy":"148"},{"ruleId":"137","replacedBy":"149"},{"ruleId":"135","replacedBy":"150"},{"ruleId":"137","replacedBy":"151"},{"ruleId":"143","severity":1,"message":"152","line":11,"column":3,"nodeType":"145","messageId":"146","endLine":11,"endColumn":7},{"ruleId":"139","severity":1,"message":"140","line":26,"column":27,"nodeType":"141","messageId":"142","endLine":26,"endColumn":29},{"ruleId":"143","severity":1,"message":"153","line":2,"column":51,"nodeType":"145","messageId":"146","endLine":2,"endColumn":60},{"ruleId":"135","replacedBy":"154"},{"ruleId":"137","replacedBy":"155"},{"ruleId":"143","severity":1,"message":"156","line":4,"column":11,"nodeType":"145","messageId":"146","endLine":4,"endColumn":21},{"ruleId":"157","severity":1,"message":"158","line":13,"column":17,"nodeType":"159","endLine":13,"endColumn":58},{"ruleId":"143","severity":1,"message":"152","line":11,"column":3,"nodeType":"145","messageId":"146","endLine":11,"endColumn":7},{"ruleId":"143","severity":1,"message":"153","line":2,"column":51,"nodeType":"145","messageId":"146","endLine":2,"endColumn":60},{"ruleId":"139","severity":1,"message":"140","line":26,"column":27,"nodeType":"141","messageId":"142","endLine":26,"endColumn":29},{"ruleId":"143","severity":1,"message":"156","line":4,"column":11,"nodeType":"145","messageId":"146","endLine":4,"endColumn":21},{"ruleId":"157","severity":1,"message":"158","line":13,"column":17,"nodeType":"159","endLine":13,"endColumn":58},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'ResultList' is assigned a value but never used.","Identifier","unusedVar","'Box' is defined but never used.",["160"],["161"],["160"],["161"],"'Link' is defined but never used.","'TableHead' is defined but never used.",["160"],["161"],"'DetailItem' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]